{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\backup\\\\GitHub\\\\REACT JS\\\\Learn-react-js\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n} //export asyn function getStaticPaths\n\n\nexport async function getStaticPaths() {\n  // fetch data from an API flitter _id\n  const client = await MongoClient.connect('mongodb+srv://huyhung:hung2503@cluster0.moxmi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); //return an array of paths\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n} //export asyn function getStaticProps\n\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId; // fetch data from an API flitter _id\n\n  const client = await MongoClient.connect('mongodb+srv://huyhung:hung2503@cluster0.moxmi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  return {\n    props: {\n      meetupdata: {\n        id: meetupId,\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        title: 'First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'This is a first meetup'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/backup/GitHub/REACT JS/Learn-react-js/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupdata","id","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CACD;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,+FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB,CARqC,CASrC;;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,C,CAED;;AACA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAF4C,CAG5C;;AACA,QAAMd,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,+FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,SAAO;AACLc,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEN,QADM;AAEVO,QAAAA,KAAK,EAAE,wHAFG;AAGVC,QAAAA,KAAK,EAAE,cAHG;AAIVC,QAAAA,OAAO,EAAE,0BAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP;AADF,GAAP;AAWD;AAGD,eAAe1B,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\nfunction MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\r\n      title='First Meetup'\r\n      address='Some Street 5, Some City'\r\n      description='This is a first meetup'\r\n    />\r\n  );\r\n}\r\n//export asyn function getStaticPaths\r\nexport async function getStaticPaths() {\r\n  // fetch data from an API flitter _id\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://huyhung:hung2503@cluster0.moxmi.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n  //return an array of paths\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() }\r\n    })) \r\n  };\r\n}\r\n\r\n//export asyn function getStaticProps\r\nexport async function getStaticProps(context) {\r\n  //fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n  // fetch data from an API flitter _id\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://huyhung:hung2503@cluster0.moxmi.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n    \r\n  return {\r\n    props: {\r\n      meetupdata: {\r\n        id: meetupId,\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        title: 'First Meetup',\r\n        address: 'Some Street 5, Some City',\r\n        description: 'This is a first meetup'\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}